name: Test, Build & Push to DockerHub

on:
  push:
    branches:
      - production
    paths-ignore:
      - '**.md'
      - 'Makefile'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with unittest & coverage
        run: |
          coverage run -m unittest discover
          coverage report -m --fail-under=90
        env:
          ROBINHOOD_EMAIL: ${{ secrets.ROBINHOOD_EMAIL }}
          ROBINHOOD_PASSWORD: ${{ secrets.ROBINHOOD_PASSWORD }}

      - name: Docker Image Security Test with Snyk
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_AUTH_TOKEN }}
        with:
          image: python:3.9-slim-buster
          args: --fail-on=upgradable

      - name: Security Test with Snyk
        uses: snyk/actions/python-3.8@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_AUTH_TOKEN }}
        with:
          args: --fail-on=upgradable --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          status: FAILED
          color: danger

  build-and-push-robinhood:
    needs: test
    name: Build and Push Robinhood
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          tags: starlightromero/stockstalker-robinhood:latest
          push: true
        env:
          ROBINHOOD_EMAIL: ${{ secrets.ROBINHOOD_EMAIL }}
          ROBINHOOD_PASSWORD: ${{ secrets.ROBINHOOD_PASSWORD }}

      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          status: SUCCESS
          color: good

      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          status: FAILED
          color: danger
